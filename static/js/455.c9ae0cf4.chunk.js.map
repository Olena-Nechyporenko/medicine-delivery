{"version":3,"file":"static/js/455.c9ae0cf4.chunk.js","mappings":"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","sources":["components/OrderedDrugsList/OrderedDrugsList.styled.jsx","components/OrderedDrugsList/OrderedDrugsList.jsx","components/CartForm/CartForm.styled.jsx","components/CartForm/CartForm.jsx","pages/ShoppingCartPage/ShoppingCartPage.jsx","redux/cart/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 300px;\n  height: 550px;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  border-radius: 10px;\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 600px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding: 15px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  height: 500px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding: 5px;\n\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: var(--accent-color);\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: #e3fee1;\n    border-radius: 12px;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 260px;\n  height: 220px;\n  gap: 5px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n  border-radius: 10px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    width: 350px;\n    height: 200px;\n    gap: 15px;\n  }\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    width: 500px;\n    height: 200px;\n    gap: 15px;\n  }\n`;\n\nexport const ImgWrapp = styled.div`\n  border-radius: 14px;\n  height: 100px;\n  width: 200px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 200px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 250px;\n    height: 200px;\n  }\n`;\n\nexport const Img = styled.img`\n  object-fit: cover;\n  height: 100px;\n  width: 200px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 200px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 250px;\n    height: 200px;\n  }\n`;\n\nexport const DescriptionWrapp = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-right: 5px;\n  margin-bottom: 8px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    gap: 20px;\n  }\n`;\n\nexport const Name = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n`;\n\nexport const Price = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n`;\nexport const InputWrapp = styled.div`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.1;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.1;\n  text-align: center;\n  color: var(--main-text-color);\n  width: 70px;\n  height: 20px;\n  border-color: transparent;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  padding: 0 2px;\n\n  &:focus {\n    outline: none;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n  border: none;\n  border-radius: 10px;\n  background-color: var(--accent-color);\n  padding: 5px 15px;\n  cursor: pointer;\n\n  transition: all var(--main-transition);\n\n  &:hover {\n    background-color: var(--hover-color);\n  }\n`;\n\nexport const Text = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 250px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 400px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { selectInCart } from 'redux/cart/selectors';\nimport { changeQuantity, removeFromCart } from 'redux/cart/slice';\nimport {\n  Container,\n  Wrapper,\n  List,\n  Item,\n  ImgWrapp,\n  Img,\n  DescriptionWrapp,\n  Name,\n  Price,\n  InputWrapp,\n  Input,\n  Button,\n  Text,\n} from './OrderedDrugsList.styled';\n\nexport const OrderedDrugsList = () => {\n  const dispatch = useDispatch();\n\n  const inCart = useSelector(selectInCart);\n\n  const handleRemoveFromCart = id => {\n    dispatch(removeFromCart(id));\n    Notify.success('Successfully removed from cart');\n  };\n\n  const handlechangeQuantity = data => {\n    dispatch(changeQuantity(data));\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        {inCart.length === 0 ? (\n          <Text>Your shopping cart is currently empty.</Text>\n        ) : (\n          <List>\n            {inCart.map(({ _id, img, name, price, quantity }) => (\n              <Item key={_id}>\n                <ImgWrapp>\n                  <Img src={img} alt=\"\" />\n                </ImgWrapp>\n                <DescriptionWrapp>\n                  <Name>{name}</Name>\n                  <Price>Price: {price} â‚´</Price>\n                  <InputWrapp>\n                    Quantity:\n                    <Input\n                      type=\"number\"\n                      min={0}\n                      value={quantity}\n                      onChange={e =>\n                        handlechangeQuantity({\n                          id: _id,\n                          quantity: Number(e.target.value),\n                        })\n                      }\n                    />\n                  </InputWrapp>\n                  <Button onClick={() => handleRemoveFromCart(_id)}>\n                    Remove from ordered\n                  </Button>\n                </DescriptionWrapp>\n              </Item>\n            ))}\n          </List>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 300px;\n  height: 430px;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  border-radius: 10px;\n  background-color: rgba(71, 201, 39, 0.3);\n  margin-bottom: 15px;\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n    height: 550px;\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 500px;\n    height: 550px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  width: 250px;\n  padding: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 250px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 400px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Input = styled(Field)`\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n  height: 40px;\n  border-color: transparent;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  padding: 0 10px;\n\n  &:focus {\n    outline: none;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  }\n`;\nexport const ErrorWrapper = styled.span`\n  position: absolute;\n  bottom: -20px;\n  right: 0;\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.1;\n  color: #ff4331;\n`;\n\nexport const TotalPriceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    gap: 70px;\n  }\n  @media screen and (min-width: 1200px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    gap: 70px;\n  }\n`;\n\nexport const TotalPrice = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n\n  @media screen and (min-width: 768px) {\n    font-size: 25px;\n    width: 250px;\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 25px;\n    width: 250px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 25px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n  border: none;\n  border-radius: 10px;\n  background-color: var(--accent-color);\n  padding: 10px 20px;\n  cursor: pointer;\n\n  transition: all var(--main-transition);\n\n  &:hover {\n    background-color: var(--hover-color);\n  }\n`;\n","import * as Yup from 'yup';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearCart } from 'redux/cart/slice';\nimport { selectInCart } from 'redux/cart/selectors';\nimport { addOrder } from 'redux/orders/operations';\nimport { OrderedDrugsList } from 'components/OrderedDrugsList/OrderedDrugsList';\nimport {\n  Wrapper,\n  FormContainer,\n  FormWrapper,\n  Label,\n  Input,\n  ErrorWrapper,\n  TotalPriceWrapper,\n  TotalPrice,\n  Button,\n} from './CartForm.styled';\n\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.(com|net|ua)$/i;\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .required()\n    .min(1, 'must be at least 1 characters long')\n    .max(50, 'must be no more than 50 characters long'),\n  email: Yup.string().matches(emailRegex, 'Invalid email format').required(),\n  phone: Yup.number().required().typeError('field can only contain numbers'),\n  address: Yup.string().required(),\n});\n\nexport const CartForm = () => {\n  const dispatch = useDispatch();\n  const inCart = useSelector(selectInCart);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const orderData = {\n      userData: {\n        name: values.name.trim(),\n        email: values.email.trim(),\n        phone: values.phone.toString().trim(),\n        address: values.address.trim(),\n      },\n      drugs: inCart.map(drug => ({\n        _id: drug._id,\n        name: drug.name,\n        pharmacy: drug.pharmacy,\n        quantity: drug.quantity,\n      })),\n    };\n    dispatch(addOrder(orderData));\n    Notify.success('The order has been sent successfully!');\n    resetForm();\n    dispatch(clearCart());\n  };\n\n  const totalPrice = inCart.reduce((sum, drug) => {\n    return sum + parseFloat(drug.price);\n  }, 0);\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', phone: '', address: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <Form autoComplete=\"off\">\n        <Wrapper>\n          <FormContainer>\n            <FormWrapper>\n              <Label htmlFor=\"name\">\n                Name\n                <Input type=\"text\" name=\"name\" required />\n                <ErrorWrapper>\n                  <ErrorMessage name=\"name\" />\n                </ErrorWrapper>\n              </Label>\n              <Label htmlFor=\"email\">\n                Email\n                <Input\n                  type=\"text\"\n                  name=\"email\"\n                  required\n                  placeholder=\"example@gmail.com\"\n                />\n                <ErrorWrapper>\n                  <ErrorMessage name=\"email\" />\n                </ErrorWrapper>\n              </Label>\n              <Label htmlFor=\"phone\">\n                Phone\n                <Input\n                  type=\"text\"\n                  name=\"phone\"\n                  required\n                  placeholder=\"097XXXXXXX\"\n                />\n                <ErrorWrapper>\n                  <ErrorMessage name=\"phone\" />\n                </ErrorWrapper>\n              </Label>\n              <Label htmlFor=\"address\">\n                Address\n                <Input\n                  type=\"text\"\n                  name=\"address\"\n                  required\n                  placeholder=\"Kyiv, Vasylkivska, 10\"\n                />\n                <ErrorWrapper>\n                  <ErrorMessage name=\"address\" />\n                </ErrorWrapper>\n              </Label>\n            </FormWrapper>\n          </FormContainer>\n\n          <OrderedDrugsList />\n        </Wrapper>\n\n        <TotalPriceWrapper>\n          <TotalPrice>Total price: {totalPrice.toFixed(2)}</TotalPrice>\n          <Button type=\"submit\">Submit</Button>\n        </TotalPriceWrapper>\n      </Form>\n    </Formik>\n  );\n};\n","import { CartForm } from 'components/CartForm/CartForm';\n\nexport default function ShoppingCartPage() {\n  return <CartForm />;\n}\n","export const selectInCart = state => state.cart.cart.inCart;\nexport const selectIsLoading = state => state.cart.cart.isLoading;\nexport const selectError = state => state.cart.cart.error;\n"],"names":["Container","styled","Wrapper","List","Item","ImgWrapp","Img","DescriptionWrapp","Name","Price","InputWrapp","Input","Button","Text","OrderedDrugsList","dispatch","useDispatch","inCart","useSelector","selectInCart","length","map","_id","img","name","price","quantity","src","alt","type","min","value","onChange","e","data","id","Number","target","changeQuantity","onClick","removeFromCart","Notify","FormContainer","FormWrapper","Label","Field","ErrorWrapper","TotalPriceWrapper","TotalPrice","schema","Yup","shape","required","max","email","matches","phone","typeError","address","CartForm","totalPrice","reduce","sum","drug","parseFloat","initialValues","onSubmit","values","resetForm","orderData","userData","trim","toString","drugs","pharmacy","addOrder","clearCart","validationSchema","autoComplete","htmlFor","placeholder","toFixed","ShoppingCartPage","state","cart"],"sourceRoot":""}