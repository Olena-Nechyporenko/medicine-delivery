{"version":3,"file":"static/js/920.a5e08dd3.chunk.js","mappings":"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","sources":["components/CartForm/CartForm.styled.jsx","redux/cart/selectors.js","components/OrderedDrugsList/OrderedDrugsList.styled.jsx","components/OrderedDrugsList/OrderedDrugsList.jsx","components/CartForm/CartForm.jsx","pages/ShoppingCartPage/ShoppingCartPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Field } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 300px;\n  height: 430px;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  border-radius: 10px;\n  background-color: rgba(71, 201, 39, 0.3);\n  margin-bottom: 15px;\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n    height: 550px;\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 500px;\n    height: 550px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  width: 250px;\n  padding: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 250px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 400px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Input = styled(Field)`\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n  height: 40px;\n  border-color: transparent;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  padding: 0 10px;\n\n  &:focus {\n    outline: none;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  }\n`;\nexport const ErrorWrapper = styled.span`\n  position: absolute;\n  bottom: -20px;\n  right: 0;\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.1;\n  color: #ff4331;\n`;\n\nexport const TotalPriceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    gap: 70px;\n  }\n  @media screen and (min-width: 1200px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    gap: 70px;\n  }\n`;\n\nexport const TotalPrice = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n\n  @media screen and (min-width: 768px) {\n    font-size: 25px;\n    width: 250px;\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 25px;\n    width: 250px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 25px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n  border: none;\n  border-radius: 10px;\n  background-color: var(--accent-color);\n  padding: 10px 20px;\n  cursor: pointer;\n\n  transition: all var(--main-transition);\n\n  &:hover {\n    background-color: var(--hover-color);\n  }\n`;\n","export const selectInCart = state => state.cart.cart.inCart;\nexport const selectIsLoading = state => state.cart.cart.isLoading;\nexport const selectError = state => state.cart.cart.error;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 300px;\n  height: 550px;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  border-radius: 10px;\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 600px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding: 15px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  height: 500px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding: 5px;\n\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: var(--accent-color);\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: #e3fee1;\n    border-radius: 12px;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 260px;\n  height: 220px;\n  gap: 5px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n  border-radius: 10px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    width: 350px;\n    height: 200px;\n    gap: 15px;\n  }\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    width: 500px;\n    height: 200px;\n    gap: 15px;\n  }\n`;\n\nexport const ImgWrapp = styled.div`\n  border-radius: 14px;\n  height: 100px;\n  width: 200px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 200px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 250px;\n    height: 200px;\n  }\n`;\n\nexport const Img = styled.img`\n  object-fit: cover;\n  height: 100px;\n  width: 200px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 200px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 250px;\n    height: 200px;\n  }\n`;\n\nexport const DescriptionWrapp = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-right: 5px;\n  margin-bottom: 8px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    gap: 20px;\n  }\n`;\n\nexport const Name = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n`;\n\nexport const Price = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n`;\nexport const InputWrapp = styled.div`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.1;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.1;\n  text-align: center;\n  color: var(--main-text-color);\n  width: 70px;\n  height: 20px;\n  border-color: transparent;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  padding: 0 2px;\n\n  &:focus {\n    outline: none;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.1;\n  color: var(--main-text-color);\n  border: none;\n  border-radius: 10px;\n  background-color: var(--accent-color);\n  padding: 5px 15px;\n  cursor: pointer;\n\n  transition: all var(--main-transition);\n\n  &:hover {\n    background-color: var(--hover-color);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  Container,\n  Wrapper,\n  List,\n  Item,\n  ImgWrapp,\n  Img,\n  DescriptionWrapp,\n  Name,\n  Price,\n  InputWrapp,\n  Input,\n  Button,\n} from './OrderedDrugsList.styled';\nimport { selectInCart } from 'redux/cart/selectors';\nimport { changeQuantity, removeFromCart } from 'redux/cart/slice';\n\nexport const OrderedDrugsList = () => {\n  const dispatch = useDispatch();\n  const inCart = useSelector(selectInCart);\n\n  const handleRemoveFromCart = id => {\n    dispatch(removeFromCart(id));\n  };\n\n  const handlechangeQuantity = data => {\n    dispatch(changeQuantity(data));\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <List>\n          {inCart.map(({ _id, img, name, price, quantity }) => (\n            <Item key={_id}>\n              <ImgWrapp>\n                <Img src={img} alt=\"\" />\n              </ImgWrapp>\n              <DescriptionWrapp>\n                <Name>{name}</Name>\n                <Price>Price: {price} ₴</Price>\n                <InputWrapp>\n                  Quantity:\n                  <Input\n                    type=\"number\"\n                    min={0}\n                    value={quantity}\n                    onChange={e =>\n                      handlechangeQuantity({\n                        id: _id,\n                        quantity: Number(e.target.value),\n                      })\n                    }\n                  />\n                </InputWrapp>\n                <Button onClick={() => handleRemoveFromCart(_id)}>\n                  Remove from ordered\n                </Button>\n              </DescriptionWrapp>\n            </Item>\n          ))}\n        </List>\n      </Wrapper>\n    </Container>\n  );\n};\n","import * as Yup from 'yup';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport {\n  Wrapper,\n  FormContainer,\n  FormWrapper,\n  Label,\n  Input,\n  ErrorWrapper,\n  TotalPriceWrapper,\n  TotalPrice,\n  Button,\n} from './CartForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectInCart } from 'redux/cart/selectors';\nimport { addOrder } from 'redux/orders/operations';\nimport { OrderedDrugsList } from 'components/OrderedDrugsList/OrderedDrugsList';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .required()\n    .min(1, 'Must be at least 1 characters long')\n    .max(50, 'Must be no more than 50 characters long'),\n  email: Yup.string().email().required(),\n  phone: Yup.number().required().typeError('field can only contain numbers'),\n  address: Yup.string().required(),\n});\n\nexport const CartForm = () => {\n  const dispatch = useDispatch();\n  const inCart = useSelector(selectInCart);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const orderData = {\n      userData: {\n        name: values.name,\n        email: values.email,\n        phone: values.phone.toString(),\n        address: values.address,\n      },\n      drugs: inCart.map(drug => ({\n        _id: drug._id,\n        name: drug.name,\n        pharmacy: drug.pharmacy,\n        quantity: drug.quantity,\n      })),\n    };\n    dispatch(addOrder(orderData));\n    resetForm();\n  };\n\n  const totalPrice = inCart.reduce((sum, drug) => {\n    return sum + parseFloat(drug.price);\n  }, 0);\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', phone: '', address: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <Form autoComplete=\"off\">\n        <Wrapper>\n          <FormContainer>\n            <FormWrapper>\n              <Label htmlFor=\"name\">\n                Name\n                <Input type=\"text\" name=\"name\" required />\n                <ErrorWrapper>\n                  <ErrorMessage name=\"name\" />\n                </ErrorWrapper>\n              </Label>\n              <Label htmlFor=\"email\">\n                Email\n                <Input\n                  type=\"text\"\n                  name=\"email\"\n                  required\n                  placeholder=\"example@gmail.com\"\n                />\n                <ErrorWrapper>\n                  <ErrorMessage name=\"email\" />\n                </ErrorWrapper>\n              </Label>\n              <Label htmlFor=\"phone\">\n                Phone\n                <Input\n                  type=\"text\"\n                  name=\"phone\"\n                  required\n                  placeholder=\"097XXXXXXX\"\n                />\n                <ErrorWrapper>\n                  <ErrorMessage name=\"phone\" />\n                </ErrorWrapper>\n              </Label>\n              <Label htmlFor=\"address\">\n                Address\n                <Input\n                  type=\"text\"\n                  name=\"address\"\n                  required\n                  placeholder=\"Kyiv, Vasylkivska, 10\"\n                />\n                <ErrorWrapper>\n                  <ErrorMessage name=\"address\" />\n                </ErrorWrapper>\n              </Label>\n            </FormWrapper>\n          </FormContainer>\n\n          <OrderedDrugsList />\n        </Wrapper>\n\n        <TotalPriceWrapper>\n          <TotalPrice>Total price: {totalPrice.toFixed(2)}</TotalPrice>\n          <Button type=\"submit\">Submit</Button>\n        </TotalPriceWrapper>\n      </Form>\n    </Formik>\n  );\n};\n","import { CartForm } from 'components/CartForm/CartForm';\n\nexport default function ShoppingCartPage() {\n  return <CartForm />;\n}\n"],"names":["Wrapper","styled","FormContainer","FormWrapper","Label","Input","Field","ErrorWrapper","TotalPriceWrapper","TotalPrice","Button","selectInCart","state","cart","inCart","Container","List","Item","ImgWrapp","Img","DescriptionWrapp","Name","Price","InputWrapp","OrderedDrugsList","dispatch","useDispatch","useSelector","map","_id","img","name","price","quantity","src","alt","type","min","value","onChange","e","data","id","Number","target","changeQuantity","onClick","removeFromCart","schema","Yup","shape","required","max","email","phone","typeError","address","CartForm","totalPrice","reduce","sum","drug","parseFloat","initialValues","onSubmit","values","resetForm","orderData","userData","toString","drugs","pharmacy","addOrder","validationSchema","autoComplete","htmlFor","placeholder","toFixed","ShoppingCartPage"],"sourceRoot":""}