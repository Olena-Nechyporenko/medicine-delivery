{"version":3,"file":"static/js/968.e83bd09c.chunk.js","mappings":"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","sources":["components/CartForm/CartForm.styled.jsx","redux/cart/selectors.js","components/CartForm/CartForm.jsx","pages/ShoppingCartPage/ShoppingCartPage.styled.jsx","components/OrderedDrugsList/OrderedDrugsList.styled.jsx","components/OrderedDrugsList/OrderedDrugsList.jsx","pages/ShoppingCartPage/ShoppingCartPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Field } from 'formik';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 400px;\n  height: 500px;\n  background-color: green;\n  padding: 15px 50px 15px 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Input = styled(Field)`\n  height: 40px;\n`;\n","export const selectInCart = state => state.cart.cart.inCart;\nexport const selectIsLoading = state => state.cart.cart.isLoading;\nexport const selectError = state => state.cart.cart.error;\n","import * as Yup from 'yup';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { FormWrapper, Label, Input } from './CartForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectInCart } from 'redux/cart/selectors';\nimport { addOrder } from 'redux/orders/operations';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .required()\n    .min(1, 'Must be at least 1 characters long')\n    .max(50, 'Must be no more than 50 characters long'),\n  email: Yup.string().email().required(),\n  phone: Yup.string().required(),\n  address: Yup.string().required(),\n});\n\nexport const CartForm = () => {\n  const dispatch = useDispatch();\n  const inCart = useSelector(selectInCart);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const orderData = {\n      userData: {\n        name: values.name,\n        email: values.email,\n        phone: values.phone,\n        address: values.address,\n      },\n      drugs: inCart.map(drug => ({\n        _id: drug._id,\n        name: drug.name,\n        pharmacy: drug.pharmacy,\n        quantity: drug.quantity,\n      })),\n    };\n    dispatch(addOrder(orderData));\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', phone: '', address: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <Form autoComplete=\"off\">\n        <FormWrapper>\n          <Label htmlFor=\"name\">\n            Name\n            <Input type=\"text\" name=\"name\" required />\n            <span>\n              <ErrorMessage name=\"name\" />\n            </span>\n          </Label>\n          <Label htmlFor=\"email\">\n            Email\n            <Input type=\"text\" name=\"email\" required />\n            <span>\n              <ErrorMessage name=\"email\" />\n            </span>\n          </Label>\n          <Label htmlFor=\"phone\">\n            Phone\n            <Input type=\"text\" name=\"phone\" required />\n          </Label>\n          <Label htmlFor=\"address\">\n            Address\n            <Input type=\"text\" name=\"address\" required />\n          </Label>\n          {/* <Button type=\"submit\">Search</Button> */}\n        </FormWrapper>\n\n        <h2>Total price</h2>\n        <button type=\"submit\">Submit</button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 100vh;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 500px;\n  height: 500px;\n  background-color: blue;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  height: 500px;\n  overflow-y: scroll;\n`;\n\nexport const Item = styled.li`\n  background-color: beige;\n  width: 300px;\n  //   height: px;\n`;\n\nexport const ImgWrapp = styled.div`\n  border-radius: 14px;\n  width: 300px;\n  height: 200px;\n  overflow: hidden;\n  margin-bottom: 14px;\n`;\n\nexport const Img = styled.img`\n  object-fit: cover;\n  height: 200px;\n  width: 300px;\n`;\n\nexport const Name = styled.div``;\n\nexport const Price = styled.div``;\n\nexport const Button = styled.button``;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  Wrapper,\n  List,\n  Item,\n  ImgWrapp,\n  Img,\n  Name,\n  Price,\n  Button,\n} from './OrderedDrugsList.styled';\nimport { selectInCart } from 'redux/cart/selectors';\nimport { changeQuantity, removeFromCart } from 'redux/cart/slice';\n\nexport const OrderedDrugsList = () => {\n  const dispatch = useDispatch();\n  const inCart = useSelector(selectInCart);\n\n  const handleRemoveFromCart = id => {\n    dispatch(removeFromCart(id));\n  };\n\n  const handlechangeQuantity = data => {\n    dispatch(changeQuantity(data));\n  };\n\n  return (\n    <Wrapper>\n      <List>\n        {inCart.map(({ _id, img, name, price, quantity }) => (\n          <Item key={_id}>\n            <ImgWrapp>\n              <Img src={img} alt=\"\" />\n            </ImgWrapp>\n            <Name>{name}</Name>\n            <Price>{price} â‚´</Price>\n            <input\n              type=\"number\"\n              value={quantity}\n              onChange={e =>\n                handlechangeQuantity({\n                  id: _id,\n                  quantity: Number(e.target.value),\n                })\n              }\n            />\n            <Button onClick={() => handleRemoveFromCart(_id)}>\n              Remove from ordered\n            </Button>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n","import { CartForm } from 'components/CartForm/CartForm';\nimport { Wrapper } from './ShoppingCartPage.styled';\nimport { OrderedDrugsList } from 'components/OrderedDrugsList/OrderedDrugsList';\n\nexport default function ShoppingCartPage() {\n  return (\n    <Wrapper>\n      <CartForm />\n      <OrderedDrugsList />\n    </Wrapper>\n  );\n}\n"],"names":["FormWrapper","styled","Label","Input","Field","selectInCart","state","cart","inCart","schema","Yup","shape","name","required","min","max","email","phone","address","CartForm","dispatch","useDispatch","useSelector","initialValues","onSubmit","values","resetForm","orderData","userData","drugs","map","drug","_id","pharmacy","quantity","addOrder","validationSchema","autoComplete","htmlFor","type","Wrapper","List","Item","ImgWrapp","Img","Name","Price","Button","OrderedDrugsList","img","price","src","alt","value","onChange","e","data","id","Number","target","changeQuantity","onClick","removeFromCart","ShoppingCartPage"],"sourceRoot":""}